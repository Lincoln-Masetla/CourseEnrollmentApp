@page "/courses"
@using CourseEnrollmentApp.Core.Interfaces.Repositories

@inject ICourseRegistrationRepository _courseRegistrationRepository
@inject ICourseRegistrationService _courseRegistrationService

<div class="container">
    <div class="row">
        @if (courses != null)
        {
            @foreach (var course in courses)
            {
               <_CourseCard Course="course" OnRegisterClick="RegisterForCourse"></_CourseCard>
            }
        }
        else
        {
            <div class="col-12">
                <p>Loading courses...</p>
            </div>
        }
    </div>
</div>

@code {
    private List<Course>? courses;

    protected override async Task OnInitializedAsync()
    {
        courses = await GetCourses();
    }

    private async Task RegisterForCourse(Course course)
    {
        if (await _courseRegistrationService.RegisterCourseAsync(1, course.Id))
        {
            courses = await GetCourses();
        }
    }

    private async Task<List<Course>> GetCourses()
    {
        var enrolledCourses = await _courseRegistrationRepository.GetCourseNotRegisteredByStudentIdAsync(1);
        return enrolledCourses.Select(cards => cards.Course!).ToList();
    }
}
